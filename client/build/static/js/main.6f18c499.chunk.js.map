{"version":3,"sources":["logo.svg","components/recipe-list.component.js","components/recipe-detail.component.js","components/recipe-add.component.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","props","recipe","name","link","ingredients","length","to","_id","RecipeList","state","recipes","axios","get","then","response","setState","data","catch","error","console","log","this","map","className","recipeList","Component","ingredient","RecipeDetail","match","params","id","numQty","require","RecipeAdd","onChangeName","bind","onChangeLink","onSubmit","instructions","timeActive","timeCook","timeInactive","timePrep","timeReady","timeTotal","scrapedRecipe","scrapedImgLink","e","target","value","getRecipeFromLink","amt","ingredientStr","tokens","split","quantity","shift","unit","join","unshift","post","res","parsedIngredients","parseIngredient","imageSrcLink","image","preventDefault","type","required","onChange","height","width","src","ref","instruction","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAAe,I,4DCITA,EAAS,SAAAC,GAAK,OAClB,+BACE,6BAAKA,EAAMC,OAAOC,OAClB,6BAAKF,EAAMC,OAAOE,OAClB,6BAAKH,EAAMC,OAAOG,YAAYC,SAC9B,6BACE,cAAC,IAAD,CAAMC,GAAI,YAAYN,EAAMC,OAAOM,IAAnC,wBAKeC,E,kDACnB,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IAIDS,MAAQ,CAAEC,QAAS,IALP,E,gEAQE,IAAD,OAClBC,IAAMC,IAAN,gBACGC,MAAK,SAAAC,GACJ,EAAKC,SAAS,CAAEL,QAASI,EAASE,UAEnCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,Q,mCAchB,OAAOG,KAAKZ,MAAMC,QAAQY,KAAI,SAAArB,GAC5B,OAAO,cAAC,EAAD,CAAQA,OAAQA,GAAaA,EAAOM,U,+BAK7C,OACE,gCACE,yCACA,cAAC,IAAD,CAAMD,GAAI,OAAV,iBACA,wBAAOiB,UAAU,QAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,wCACA,sCACA,6CACA,2CAGJ,gCACIF,KAAKG,yB,GAjDqBC,aCXlC1B,EAAS,SAAAC,GAAK,OAChB,gCACI,6BAAKA,EAAMC,OAAOC,OAClB,4BAAIF,EAAMC,OAAOE,OACjB,6BAECH,EAAMC,OAAOG,YAAcJ,EAAMC,OAAOG,YAAYkB,KAAI,SAAAI,GACrD,OACI,6BAAKA,EAAWxB,UAEpB,WAKSyB,E,kDACnB,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IAEDS,MAAQ,CAAER,OAAQ,IAHN,E,gEAME,IAAD,OAClBU,IAAMC,IAAI,gBAAgBS,KAAKrB,MAAM4B,MAAMC,OAAOC,IAC/CjB,MAAK,SAAAC,GACJ,EAAKC,SAAS,CAAEd,OAAQa,EAASE,UAElCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,Q,+BAchB,OACE,gCACE,wCACA,cAAC,EAAD,CAAQjB,OAAQoB,KAAKZ,MAAMR,QAAaoB,KAAKZ,MAAMR,OAAOM,Y,GA9BxBkB,a,QChBtCM,EAASC,EAAQ,IAaAC,E,kDACnB,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAEDkC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBAIhB,EAAK1B,MAAQ,CACTP,KAAM,GACNC,KAAM,GACNC,YAAa,GACbkC,aAAc,GACdC,WAAY,GACZC,SAAU,GACVC,aAAc,GACdC,SAAU,GACVC,UAAW,GACXC,UAAW,GAEXC,cAAe,GACfC,eAAgB,IAtBH,E,sGA6BNC,GACX1B,KAAKN,SAAS,CACVb,KAAM6C,EAAEC,OAAOC,U,mCAIRF,GACX1B,KAAKN,SAAS,CAACZ,KAAM4C,EAAEC,OAAOC,QAC9B5B,KAAK6B,kBAAkBH,EAAEC,OAAOC,S,2EAOtBE,M,sCAIIC,GACd,IAAIC,EAASD,EAAcE,MAAM,KAC7BC,EAAYF,EAAOG,QACvB,IAEI,GADAD,EAAWxB,EAAOwB,GACfF,EAAOhD,OAAS,EAEf,MAAO,CAACH,KADGmD,EAAOG,QACED,SAAUA,EAAUE,KAAK,MAE7C,IAAIA,EAAOJ,EAAOG,QAElB,MAAO,CAACtD,KADGmD,EAAOK,KAAK,KACHH,SAAUA,EAAUE,KAAKA,GAEpD,SAGG,OADAJ,EAAOM,QAAQJ,GACR,CAACrD,KAAMmD,EAAOK,KAAK,KAAMH,SAAU,KAAME,KAAM,S,wCAI1CtD,GAAO,IAAD,OACtBQ,IAAMiD,KAAK,sBAAuB,CAACzD,KAAMA,IACxCU,MAAK,SAAAgD,GACF1C,QAAQC,IAAIyC,EAAI7C,MAEhB,IAAI8C,EAAoBD,EAAI7C,KAAKZ,YAAYkB,KAAI,SAAAI,GAC7C,OAAO,EAAKqC,gBAAgBrC,MAEhCP,QAAQC,IAAI0C,GAEZ,EAAK/C,SAAS,CACVb,KAAM2D,EAAI7C,KAAKd,KACf8D,aAAcH,EAAI7C,KAAKiD,MACvB7D,YAAa0D,EACbxB,aAAcuB,EAAI7C,KAAKsB,oB,+BAMxBS,GACPA,EAAEmB,iBAEF,IAAMjE,EAAS,CACbC,KAAMmB,KAAKZ,MAAMP,KACjBC,KAAMkB,KAAKZ,MAAMN,KACjBC,YAAaiB,KAAKZ,MAAML,YACxBkC,aAAcjB,KAAKZ,MAAM6B,cAG3BnB,QAAQC,IAAInB,GAEZU,IAAMiD,KAAK,eAAgB3D,GACxBY,MAAK,SAAAgD,GAAG,OAAI1C,QAAQC,IAAIyC,EAAI7C,SAE/BK,KAAKN,SAAS,CACZb,KAAM,O,+BAMR,OACA,gCACE,gDACA,uBAAMmC,SAAUhB,KAAKgB,SAArB,UAEE,sBAAKd,UAAU,aAAf,UACE,2CACA,uBAAQ4C,KAAK,OACTC,UAAQ,EACR7C,UAAU,eACV0B,MAAO5B,KAAKZ,MAAMN,KAClBkE,SAAUhD,KAAKe,kBAGpBf,KAAKZ,MAAMuD,aAAe,qBAAKM,OAAO,QAAQC,MAAM,QAAQC,IAAKnD,KAAKZ,MAAMuD,eAAuB,KACpG,sBAAKzC,UAAU,aAAf,UACE,4CACA,uBAAOkD,IAAI,YACPL,UAAQ,EACR7C,UAAU,eACV0B,MAAO5B,KAAKZ,MAAMP,KAClBmE,SAAUhD,KAAKa,kBAIpBb,KAAKZ,MAAML,YAAYC,OAAQ,eAAe,KAC/C,6BACCgB,KAAKZ,MAAML,YAAYkB,KAAI,SAAAI,GACxB,OACA,+BACKA,EAAWxB,KADhB,KACwBwB,EAAW6B,SADnC,KAC+C7B,EAAW+B,aAM7DpC,KAAKZ,MAAM6B,aAAajC,OAAQ,gBAAgB,KACjD,6BACCgB,KAAKZ,MAAM6B,aAAahB,KAAI,SAAAoD,GACzB,OACA,6BACKA,SAOT,qBAAKnD,UAAU,aAAf,SACE,uBAAO4C,KAAK,SAASlB,MAAM,gBAAgB1B,UAAU,gC,GAhKxBE,a,eCMxBkD,MAbf,WACE,OACE,cAAC,IAAD,UACA,sBAAKpD,UAAU,YAAf,UACE,uBACA,cAAC,IAAD,CAAOqD,KAAK,IAAIC,OAAK,EAACC,UAAWtE,IACjC,cAAC,IAAD,CAAOoE,KAAK,eAAeC,OAAK,EAACC,UAAWnD,IAC5C,cAAC,IAAD,CAAOiD,KAAK,OAAOC,OAAK,EAACC,UAAW7C,UCJ3B8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpE,MAAK,YAAkD,IAA/CqE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6f18c499.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Recipe = props => (\n  <tr>\n    <td>{props.recipe.name}</td>\n    <td>{props.recipe.link}</td>\n    <td>{props.recipe.ingredients.length}</td>\n    <td>\n      <Link to={\"/recipes/\"+props.recipe._id}>View</Link>\n    </td>\n  </tr>\n)\n\nexport default class RecipeList extends Component {\n  constructor(props) {\n    super(props);\n\n    // this.deleteExercise = this.deleteExercise.bind(this)\n\n    this.state = { recipes: []};\n  }\n\n  componentDidMount() {\n    axios.get(`/api/recipes`)\n      .then(response => {\n        this.setState({ recipes: response.data })\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n//   deleteExercise(id) {\n//     axios.delete('http://localhost:5000/exercises/'+id)\n//       .then(response => { console.log(response.data)});\n\n//     this.setState({\n//       exercises: this.state.exercises.filter(el => el._id !== id)\n//     })\n//   }\n\n  recipeList() {\n    return this.state.recipes.map(recipe => {\n      return <Recipe recipe={recipe} key={recipe._id}/>;\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Recipes</h3>\n        <Link to={\"/add\"}>Add</Link>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Recipe</th>\n              <th>Link</th>\n              <th>Ingredients</th>\n              <th>View</th>\n            </tr>\n          </thead>\n          <tbody>\n            { this.recipeList() }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Recipe = props => (\n    <div>\n        <h1>{props.recipe.name}</h1>\n        <p>{props.recipe.link}</p>\n        <ul>\n\n        {props.recipe.ingredients ? props.recipe.ingredients.map(ingredient => {\n            return (\n                <li>{ingredient.name}</li>\n            )\n        }): null}\n        </ul>\n    </div>\n)\n\nexport default class RecipeDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { recipe: {} };\n  }\n\n  componentDidMount() {\n    axios.get('/api/recipes/'+this.props.match.params.id)\n      .then(response => {\n        this.setState({ recipe: response.data })\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n//   deleteExercise(id) {\n//     axios.delete('http://localhost:5000/exercises/'+id)\n//       .then(response => { console.log(response.data)});\n\n//     this.setState({\n//       exercises: this.state.exercises.filter(el => el._id !== id)\n//     })\n//   }\n\n  render() {\n    return (\n      <div>\n        <h3>Recipe</h3>\n        <Recipe recipe={this.state.recipe} key={this.state.recipe._id}/>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nvar numQty = require(\"numeric-quantity\");\n\nconst Recipe = props => (\n  <tr>\n    <td>{props.recipe.name}</td>\n    <td>{props.recipe.link}</td>\n    <td>{props.recipe.ingredients.length}</td>\n    {/* <td>\n      <Link to={\"/edit/\"+props.exercise._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteExercise(props.exercise._id) }}>delete</a>\n    </td> */}\n  </tr>\n)\n\nexport default class RecipeAdd extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeLink = this.onChangeLink.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    // this.deleteExercise = this.deleteExercise.bind(this)\n\n    this.state = { \n        name: '',\n        link: '',\n        ingredients: [],\n        instructions: [],\n        timeActive: '',\n        timeCook: '',\n        timeInactive: '',\n        timePrep: '',\n        timeReady: '',\n        timeTotal: '',\n\n        scrapedRecipe: {},\n        scrapedImgLink: ''\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  onChangeName(e) {\n    this.setState({\n        name: e.target.value\n    })\n  }\n\n  onChangeLink(e) {\n    this.setState({link: e.target.value})\n    this.getRecipeFromLink(e.target.value)\n  }\n\n  setIngredient() {\n\n  }\n\n  checkAmount(amt){\n\n  }\n\n  parseIngredient(ingredientStr){\n    let tokens = ingredientStr.split(' ');\n    let quantity = (tokens.shift());\n    try{\n        quantity = numQty(quantity)\n        if(tokens.length < 2){\n            let name = tokens.shift();\n            return {name: name, quantity: quantity, unit:null}\n        }else{\n            let unit = tokens.shift();\n            let name = tokens.join(' ');\n            return {name: name, quantity: quantity, unit:unit}\n        }\n    }catch{\n        //If error, save all text as name\n        tokens.unshift(quantity);\n        return {name: tokens.join(' '), quantity: null, unit: null}\n    }\n  }\n\n  getRecipeFromLink(link) {\n    axios.post('/api/recipes/scrape', {link: link})\n    .then(res => {\n        console.log(res.data)\n     \n        let parsedIngredients = res.data.ingredients.map(ingredient => {\n            return this.parseIngredient(ingredient);\n        })\n        console.log(parsedIngredients);\n\n        this.setState({\n            name: res.data.name,\n            imageSrcLink: res.data.image,\n            ingredients: parsedIngredients,\n            instructions: res.data.instructions\n        })\n    });\n\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const recipe = {\n      name: this.state.name,\n      link: this.state.link,\n      ingredients: this.state.ingredients,\n      instructions: this.state.instructions\n    }\n\n    console.log(recipe);\n\n    axios.post('/api/recipes', recipe)\n      .then(res => console.log(res.data));\n\n    this.setState({\n      name: ''\n    })\n\n  }\n\n  render() {\n    return (\n    <div>\n      <h3>Add New Recipe</h3>\n      <form onSubmit={this.onSubmit}>\n\n        <div className=\"form-group\"> \n          <label>Link: </label>\n          <input  type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.link}\n              onChange={this.onChangeLink}\n              />\n        </div>\n        {this.state.imageSrcLink ? <img height=\"300px\" width=\"300px\" src={this.state.imageSrcLink}></img> : null }\n        <div className=\"form-group\"> \n          <label>Recipe </label>\n          <input ref=\"nameInput\"\n              required\n              className=\"form-control\"\n              value={this.state.name}\n              onChange={this.onChangeName}>\n          </input>\n        </div>\n\n        {this.state.ingredients.length? \"Ingredients:\":null}\n        <ul>\n        {this.state.ingredients.map(ingredient => {\n            return (\n            <li>\n                {ingredient.name}, {ingredient.quantity}, {ingredient.unit}\n            </li>)\n        })}\n        </ul>\n\n        \n        {this.state.instructions.length? \"Instructions:\":null}\n        <ul>\n        {this.state.instructions.map(instruction => {\n            return (\n            <li>\n                {instruction}\n            </li>\n            )\n        })}\n        </ul>\n\n\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Create Recipe\" className=\"btn btn-primary\" />\n        </div>\n        \n      </form>\n    </div>\n    )\n  }\n}","import logo from './logo.svg';\nimport './App.css';\nimport RecipeList from \"./components/recipe-list.component.js\";\nimport RecipeDetail from \"./components/recipe-detail.component.js\";\nimport RecipeAdd from \"./components/recipe-add.component.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"Container\">\n      <br/>\n      <Route path=\"/\" exact component={RecipeList} />\n      <Route path=\"/recipes/:id\" exact component={RecipeDetail} />\n      <Route path=\"/add\" exact component={RecipeAdd} />\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}